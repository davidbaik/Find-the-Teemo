package ca.cmpt276.as3.findtheteemo;

import android.os.Bundle;
import android.app.Activity;
import android.content.SharedPreferences;
import android.widget.Button;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;

public class GameActivity extends Activity {

	private final static int SMALL_NUM_ROWS = 3;
	private final static int SMALL_NUM_COLS = 4;
	private final static int MEDIUM_NUM_ROWS = 4;
	private final static int MEDIUM_NUM_COLS = 6;
	private final static int LARGE_NUM_ROWS = 6;
	private final static int LARGE_NUM_COLS = 10;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_game);
		if (getBoardSize() == 0) {
			populateGameBoard(SMALL_NUM_ROWS, SMALL_NUM_COLS);
		} else if (getBoardSize() == 1) {
			populateGameBoard(MEDIUM_NUM_ROWS, MEDIUM_NUM_COLS);
		} else {
			populateGameBoard(LARGE_NUM_ROWS, LARGE_NUM_COLS);
		}
		
		setupTeemoCountDisplay();
		incrementNumberGamesStarted();
		setupNumGamesStartedDisplay();
	}
	
	private void setupTeemoCountDisplay() {
<<<<<<< .mine
		// TODO Auto-generated method stub
		String message = (String) getResources().getText(R.string.test);
		message += getTeemoCount();
		TextView view = (TextView) findViewById(R.id.txtNumberOfTeemos);
		//view.setText(message);
=======
		TextView view = (TextView) findViewById(R.id.txtTeemosFound);
		String message = (String) getResources().getText(R.string.teemos_found);
		message += GameLogic.test();
		view.setText(message);
>>>>>>> .r11
	}
<<<<<<< .mine
	private String getTeemoCount() {
		return GameLogic.returnTestMessage();
	}
=======
>>>>>>> .r11

	private void incrementNumberGamesStarted() {
		SharedPreferences runStats = getSharedPreferences("GameStats", MODE_PRIVATE);
        int timesRun = runStats.getInt("TimesLoaded", 0);
        
        timesRun++;

        SharedPreferences.Editor prefEditor = runStats.edit();
        prefEditor.putInt("TimesLoaded", timesRun);
        prefEditor.commit();	
	}

	private void setupNumGamesStartedDisplay() {
		TextView view = (TextView) findViewById(R.id.txtTimesPlayed);
		String message = (String) getResources().getText(R.string.times_played);
		message += getNumberTimesStarted();
		view.setText(message);
	}
	private int getNumberTimesStarted() {
	        SharedPreferences runStats = getSharedPreferences("GameStats", MODE_PRIVATE);
	        return runStats.getInt("TimesLoaded", 0);         
	}

	private int getBoardSize() {
		SharedPreferences size = getSharedPreferences("BoardSize", MODE_PRIVATE);
		return size.getInt("BoardSizeIndex", 0);
	}
	
	private void populateGameBoard(int numRows, int numCols) {
		TableLayout gameBoard = (TableLayout) findViewById(R.id.gameBoard);
		
		for (int row = 0; row < numRows; row++) {
			TableRow tableRow = new TableRow(this);
			tableRow.setLayoutParams(new TableLayout.LayoutParams(
					TableLayout.LayoutParams.MATCH_PARENT,
					TableLayout.LayoutParams.MATCH_PARENT,
					1.0f));
			gameBoard.addView(tableRow);
			
			for (int col = 0; col < numCols; col++) {
				Button button = new Button(this);
				button.setLayoutParams(new TableRow.LayoutParams(
						TableRow.LayoutParams.MATCH_PARENT,
						TableRow.LayoutParams.MATCH_PARENT,
						1.0f));
				tableRow.addView(button);
			}
		}
	}
	
}
